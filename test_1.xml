<?xml version="1.0"?>
<project name="abc">
  <packages>
    <package isInitialize="true">
      <name>package1</name>
      <position>
        <x>0</x>
        <y>0</y>
      </position>
    </package>
    <package isInitialize="true">
      <name>package1.interfaces</name>
      <position>
        <x>1</x>
        <y>1</y>
      </position>
    </package>
    <package isInitialize="true">
      <name>package2</name>
      <position>
        <x>1</x>
        <y>1</y>
      </position>
    </package>
  </packages>
  <classes>
    <class isAbstract="false" isEnum="true" isFinal="false"
    isInterface="false" isStatic="false" isInitialize="true" visibility="public">
      <name>package1.enumclass</name>
      <extends></extends>
      <implements></implements>
      <fields>
        <field>
          <name>ABCD</name>
          <type></type>
        </field>
        <field>
          <name>efgh</name>
          <type></type>
        </field>
      </fields>
      <methods></methods>
      <position>
        <x>1</x>
        <y>1</y>
      </position>
    </class>
    <class isAbstract="true" isEnum="false" isFinal="false"
    isInterface="false" isStatic="false" isInitialize="true" visibility="public">
      <name>package1.abstractclass</name>
      <extends></extends>
      <implements></implements>
      <fields>
        <field visibility="protected" isFinal="false"
        isStatic="false" isAbstract="false">
          <name>_Integer</name>
          <type>int</type>
          <defaultValue>
          	<functionInput>
          		<func></func>
          		<inputs>
          			<input>1</input>
          		</inputs>
          	</functionInput>
          </defaultValue>
        </field>
        <field visibility="protected" isAbstract="false"
        isFinal="true" isStatic="false">
          <name>_List</name>
          <type>java.util.List&lt;Integer&gt;</type>
        </field>
      </fields>
      <methods>
        <method visibility="public" isAbstract="false" isFinal="false" isStatic="false" isStrictOrder="true">
        	<name>abstractclass</name>
        	<outputType></outputType>
        	<methodInputs></methodInputs>
        	<methodLines>
        		<methodLine>
        			<function>new List&lt;Integer&gt;</function>
        			<outputVariable>_List</outputVariable>
        			<functionInputs></functionInputs>
        			<lineNumber>0</lineNumber>
        			<lineLabels></lineLabels>
        		</methodLine>
        	</methodLines>
        	<annotations></annotations>
        	<exceptions></exceptions>
        </method>
        <method visibility="public" isAbstract="true"
        isFinal="false" isStatic="false" isStrictOrder="false">
          <name>SetInteger</name>
          <outputType>void</outputType>
          <methodInputs>
            <methodInput>
              <name>number</name>
              <type>int</type>
            </methodInput>
          </methodInputs>
          <methodLines></methodLines>
          <annotations></annotations>
          <exceptions></exceptions>
        </method>
        <method visibility="public" isAbstract="false"
        isFinal="false" isStatic="false" isStrictOrder="true">
          <name>GetInteger</name>
          <outputType>int</outputType>
          <methodInputs></methodInputs>
          <methodLines>
            <methodLine>
              <function>return</function>
              <outputVariable></outputVariable>
              <functionInputs>
                <functionInput>
                  <func></func>
                  <inputs>
                    <input>_Integer</input>
                  </inputs>
                </functionInput>
              </functionInputs>
              <lineNumber>-1</lineNumber>
              <lineLabels></lineLabels>
            </methodLine>
          </methodLines>
          <annotations></annotations>
          <exceptions></exceptions>
        </method>
        <method visibility="public" isAbstract="true" isFinal="false" isStatic="false" isStrictOrder="false">
        	<name>GetList</name>
        	<outputType>java.util.List&lt;Integer&gt;</outputType>
        	<methodInputs></methodInputs>
        	<methodLines></methodLines>
        	<annotations></annotations>
        	<exceptions></exceptions>
        </method>
        <method visibility="public" isAbstract="false" isFinal="true" isStatic="true" isStrictOrder="false">
        	<name>GetVersion</name>
        	<outputType>double</outputType>
        	<methodInputs></methodInputs>
        	<methodLines>
        		<methodLine>
        			<function>return</function>
        			<outputVariable></outputVariable>
        			<functionInputs>
        				<functionInput>
        					<func></func>
        					<inputs><input>1.0</input></inputs>
        				</functionInput>
        			</functionInputs>
        			<lineNumber></lineNumber>
        			<lineLabels></lineLabels>
        		</methodLine>
        	</methodLines>        
        	<annotations></annotations>
        	<exceptions></exceptions>
        </method>
      </methods>
      <position>
        <x>10</x>
        <y>10</y>
      </position>
    </class>
    <class visibility="public" isInitialize="true" isAbstract="false" isEnum="false" isFinal="false" isInterface="true" isStatic="false">
    	<name>package1.interfaces.IAddArray</name>
    	<extends></extends><implements></implements>
    	<fields></fields>
    	<methods>
    		<method visibility="public" isAbstract="false" isFinal="false" isStatic="false" isStrictOrder="false">
    			<name>AddArrayToList</name>
    			<outputType>void</outputType>
    			<methodInputs>
    				<methodInput>
    					<name>array</name>
    					<type>int[]</type>
    				</methodInput>
    			</methodInputs>
    			<methodLines></methodLines>
    			<annotations></annotations>
    			<exceptions></exceptions>
    		</method>
    	</methods>
    	<position><x>10</x><y>0</y></position>
    </class>
    <class visibility="public" isInitialize="true" isAbstract="false" isEnum="false" isFinal="true" isInterface="false" isStatic="false">
    	<name>package2.TestClass</name>
    	<extends><name>package1.abstractclass</name></extends>
    	<implements><name>package1.interface.AddArray</name></implements>
    	<fields></fields>
    	<methods>
    		<method isAbstract="false" isFinal="false" isStatic="false" isStrictOrder="true">
    			<name>TestClass</name>
    			<outputType></outputType>
    			<methodInputs></methodInputs>
    			<methodLines>
    				<methodLine>
    					<function>super</function>
    					<outputVariable></outputVariable>
    					<functionInputs></functionInputs>
    					<lineNumber>0</lineNumber>
    					<lineLabels></lineLabels>
    				</methodLine>
    			</methodLines>
    			<annotations></annotations>
    			<exceptions></exceptions>
    		</method>
    		<method isAbstract="false" isFinal="true" isStatic="false" isStrictOrder="true" visibility="public">
    			<name>AddArray</name>
    			<outputType>void</outputType>
    			<methodInputs>
    				<methodInput>
    					<name>array</name>
    					<type>int[]</type>
    				</methodInput>
    			</methodInputs>
    			<methodLines>
    				<methodLine>
    					<function>foreach</function>
    					<outputVariable></outputVariable>
    					<functionInputs>
    						<functionInput>
    							<func>TypeAndVariableName</func>
    							<inputs>
    								<input>int</input>
    								<input>num</input>
    							</inputs>
    						</functionInput>
    						<functionInput>
    							<func></func>
    							<inputs>
    								<input>array</input>
    							</inputs>
    						</functionInput>
    					</functionInputs>
    					<lineNumber>0</lineNumber>
    					<lineLabels>
    						<label>foreach_1</label>
    					</lineLabels>
    				</methodLine>
    				<methodLine>
    					<function>_List.add</function>
    					<outputVariable></outputVariable>
    					<functionInputs>
    						<functionInput>
    							<func></func>
    							<inputs>
    								<input>num</input>
    							</inputs>
    						</functionInput>
    					</functionInputs>
    					<lineNumber>1</lineNumber>
    					<lineLabels>
    						<label>foreach_1</label>
    					</lineLabels>
    				</methodLine>
    			</methodLines>
    			<annotations>
    				<functionInput>
    					<func>Override</func>
    					<inputs></inputs>
    				</functionInput>
    			</annotations>
    			<exceptions></exceptions>
    		</method>
    	</methods>
    	<position><x>0</x><y>10</y></position>
    </class>
  </classes>
</project>
